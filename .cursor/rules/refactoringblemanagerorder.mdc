# Правило: Уточненный Порядок Рефакторинга BLEManager

При рефакторинге кода, связанного с BLE, в класс `BLEManager`, придерживайтесь следующего порядка переноса функциональности (с проверкой компиляции после каждого атомарного шага):

1.  **Создание Базы:** Создайте файлы `BLEManager.h` и `.cpp`, базовый класс с конструктором и пустыми методами (`init`, `startAdvertising`, `isConnected`, `getRSSI`).
2.  **Подключение к `main.cpp`:** Добавьте `#include "BLEManager.h"` и объявите глобальный экземпляр `BLEManager bleManager;`.
3.  **Перенос `init()` Логики:**
    *   Закомментируйте блок инициализации BLE в `setup()` (`NimBLEDevice::init`, `createServer`, `HIDDevice`, `startServices`, `getAdvertising`, `start`) в `main.cpp`.
    *   Проверьте компиляцию.
    *   Скопируйте этот код (без комментариев) в метод `BLEManager::init()`.
    *   Адаптируйте код в `BLEManager::init()` для использования членов класса (например, `pServer` вместо глобального `bleServer`).
    *   Проверьте компиляцию `BLEManager.cpp`.
    *   Удалите закомментированный блок из `main.cpp`.
    *   Добавьте вызов `bleManager.init()` в `setup()` `main.cpp`.
    *   Проверьте общую компиляцию.
4.  **Перенос Указателей:** По одному переносите глобальные указатели (`pServer`, `pHid`, `pAdvertising`, `pInputMouse`, `pOutputReport`) в `private` члены `BLEManager`. После переноса каждого указателя:
    *   Закомментируйте глобальное объявление в `main.cpp`.
    *   Проверьте компиляцию (ожидаются ошибки).
    *   Замените использование глобального указателя в `main.cpp` на доступ через `bleManager` (возможно, потребуется добавить геттеры в `BLEManager`).
    *   Проверьте компиляцию.
    *   Удалите закомментированное глобальное объявление.
5.  **Перенос Коллбэков:** Перенесите классы `ServerCallbacks` и `SecurityCallbacks` в `BLEManager` (вложенные или в .cpp). Адаптируйте их создание в конструкторе `BLEManager` и установку в `BLEManager::init()`.
6.  **Перенос Остальных Глобальных:** Разберитесь с `connected`, `currentRSSI`, `oldDeviceConnected`. Решите, переносить ли их полностью в `BLEManager`, или оставить в `main.cpp`, но обновлять/читать через методы `bleManager` (например, `bleManager.isConnected()`, `bleManager.getRSSI()`). Реализуйте выбранный подход пошагово. 